- name: Check if python app exists
  stat:
    path: /opt/splunk/etc/apps/Splunk_SA_Scientific_Python_linux_x86_64
  register: python_app

- name: download Python app from S3 bucket
  get_url:
    url: '{{ s3_bucket_url }}/{{ splunk_python_app }}'
    dest: /tmp/python-for-scientific-computing-for-linux-64-bit_14.tgz
  when: 
    - python_app.stat.exists == False
    - install_mltk == "1"

- name: Install Python app via REST
  uri:
    url: "https://127.0.0.1:8089/services/apps/local"
    method: POST
    user: "admin"
    password: "{{ splunk_admin_password }}"
    validate_certs: false
    body: "name=/tmp/python-for-scientific-computing-for-linux-64-bit_14.tgz&update=true&filename=true"
    headers:
      Content-Type: "application/x-www-form-urlencoded"
    status_code: [ 200, 201 ]
    timeout: 90
  when: 
    - python_app.stat.exists == False
    - install_mltk == "1"
  notify: restart splunk

- name: Check if MLTK ta exists
  stat:
    path: /opt/splunk/etc/apps/Splunk_ML_Toolkit
  register: mltk_app

- name: download MLTK app from S3 bucket
  get_url:
    url: '{{ s3_bucket_url }}/{{ splunk_mltk_app }}'
    dest: /tmp/splunk-machine-learning-toolkit_450.tgz
  when: 
    - mltk_app.stat.exists == False
    - install_mltk == "1"

- name: Install MLTK app via REST
  uri:
    url: "https://127.0.0.1:8089/services/apps/local"
    method: POST
    user: "admin"
    password: "{{ splunk_admin_password }}"
    validate_certs: false
    body: "name=/tmp/splunk-machine-learning-toolkit_450.tgz&update=true&filename=true"
    headers:
      Content-Type: "application/x-www-form-urlencoded"
    status_code: [ 200, 201 ]
    timeout: 30
  when: 
    - mltk_app.stat.exists == False
    - install_mltk == "1"
  notify: restart splunk
