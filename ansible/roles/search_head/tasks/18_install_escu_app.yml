- name: Check if ESCU App exists
  stat:
    path: /opt/splunk/etc/apps/DA-ESS-ContentUpdate
  register: escu_app

- name: download ESCU app from S3 bucket
  get_url:
    url: '{{ s3_bucket_url }}/{{ splunk_escu_app }}'
    dest: /tmp/escu_app.tgz
  when: escu_app.stat.exists == False

- name: Install escu app via REST
  uri:
    url: "https://127.0.0.1:8089/services/apps/local"
    method: POST
    user: "admin"
    password: "{{ splunk_admin_password }}"
    validate_certs: false
    body: "name=/tmp/escu_app.tgz&update=true&filename=true"
    headers:
      Content-Type: "application/x-www-form-urlencoded"
    status_code: [ 200, 201 ]
    timeout: 30
  when: escu_app.stat.exists == False
  notify: restart splunk

- name: Create local folder directory
  file:
    path: "{{ item }}"
    state: directory
    owner: splunk
    group: splunk
    recurse: yes
  with_items:
    - /opt/splunk/etc/apps/DA-ESS-ContentUpdate/local/

- name: copy macros.conf to splunk server
  copy:
    src: macros.conf
    dest: /opt/splunk/etc/apps/DA-ESS-ContentUpdate/local/macros.conf
    owner: splunk
    group: splunk
  notify: restart splunk

- name: copy savedsearches.conf to splunk server
  copy:
    src: savedsearches.conf
    dest: /opt/splunk/etc/apps/DA-ESS-ContentUpdate/local/savedsearches.conf
    owner: splunk
    group: splunk
  notify: restart splunk
